# Generated by Django 5.2 on 2025-05-05 21:25

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('deces', '0002_partitioning_date_deces'),
    ]

    operations = [
        migrations.AlterUniqueTogether(
            name='deces',
            unique_together={('nom', 'prenoms', 'date_naissance', 'sexe', 'date_deces', 'lieu_deces', 'acte_deces')},
        ),
        migrations.AlterField(
            model_name='deces',
            name='lieu_deces',
            field=models.CharField(max_length=5),
        ),
        migrations.CreateModel(
            name='Pays',
            fields=[
                ('cog', models.CharField(help_text='Code du pays ou territoire', max_length=5, primary_key=True, serialize=False)),
                ('actual', models.CharField(help_text='Code actualité du pays ou territoire étranger', max_length=1)),
                ('crpay', models.CharField(blank=True, help_text="Code officiel géographique de l'actuel pays de rattachement", max_length=5)),
                ('ani', models.CharField(blank=True, help_text="Année d'apparition du code au COG", max_length=4)),
                ('libcog', models.CharField(help_text='Libellé utilisé dans le COG', max_length=70)),
                ('libenr', models.CharField(help_text='Nom officiel du pays, ou composition détaillée du territoire', max_length=200)),
                ('codeiso2', models.CharField(blank=True, help_text='Code du pays sur 2 caractères conforme à la norme internationale ISO 3166', max_length=2)),
                ('codeiso3', models.CharField(blank=True, help_text='Code du pays sur 3 caractères conforme à la norme internationale ISO 3166', max_length=3)),
                ('codenum3', models.CharField(blank=True, help_text='Code du pays à 3 chiffres conforme à la norme internationale ISO 3166', max_length=3)),
            ],
            options={
                'verbose_name': 'Pays',
                'verbose_name_plural': 'Pays',
                'ordering': ['libcog'],
                'indexes': [models.Index(fields=['libcog'], name='deces_pays_libcog_570b62_idx'), models.Index(fields=['libenr'], name='deces_pays_libenr_d407d3_idx'), models.Index(fields=['codeiso2'], name='deces_pays_codeiso_c7810c_idx'), models.Index(fields=['codeiso3'], name='deces_pays_codeiso_cedca8_idx')],
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('reg', models.CharField(help_text='Code région', max_length=2, primary_key=True, serialize=False)),
                ('cheflieu', models.CharField(help_text='Code de la commune chef-lieu', max_length=5)),
                ('tncc', models.CharField(help_text='Type de nom en clair', max_length=1)),
                ('ncc', models.CharField(help_text='Nom en clair (majuscules)', max_length=200)),
                ('nccenr', models.CharField(help_text='Nom en clair (typographie riche)', max_length=200)),
                ('libelle', models.CharField(help_text='Nom en clair (typographie riche) avec article', max_length=200)),
            ],
            options={
                'verbose_name': 'Région',
                'verbose_name_plural': 'Régions',
                'ordering': ['ncc'],
                'indexes': [models.Index(fields=['ncc'], name='deces_regio_ncc_7075ff_idx'), models.Index(fields=['nccenr'], name='deces_regio_nccenr_1ba984_idx'), models.Index(fields=['libelle'], name='deces_regio_libelle_dcfc1f_idx')],
            },
        ),
        migrations.CreateModel(
            name='Departement',
            fields=[
                ('dep', models.CharField(help_text='Code département', max_length=3, primary_key=True, serialize=False)),
                ('cheflieu', models.CharField(help_text='Code de la commune chef-lieu', max_length=5)),
                ('tncc', models.CharField(help_text='Type de nom en clair', max_length=1)),
                ('ncc', models.CharField(help_text='Nom en clair (majuscules)', max_length=200)),
                ('nccenr', models.CharField(help_text='Nom en clair (typographie riche)', max_length=200)),
                ('libelle', models.CharField(help_text='Nom en clair (typographie riche) avec article', max_length=200)),
                ('reg', models.ForeignKey(help_text='Code région', on_delete=django.db.models.deletion.CASCADE, to='deces.region')),
            ],
            options={
                'verbose_name': 'Département',
                'verbose_name_plural': 'Départements',
                'ordering': ['ncc'],
            },
        ),
        migrations.CreateModel(
            name='Commune',
            fields=[
                ('typecom', models.CharField(choices=[('COM', 'Commune'), ('ARM', 'Arrondissement municipal'), ('COMA', 'Commune associée'), ('COMD', 'Commune déléguée')], help_text='Type de commune', max_length=4)),
                ('com', models.CharField(help_text='Code commune', max_length=5, primary_key=True, serialize=False)),
                ('ctcd', models.CharField(help_text='Code de la collectivité territoriale ayant les compétences départementales', max_length=4)),
                ('arr', models.CharField(help_text='Code arrondissement', max_length=4)),
                ('tncc', models.CharField(help_text='Type de nom en clair', max_length=1)),
                ('ncc', models.CharField(help_text='Nom en clair (majuscules)', max_length=200)),
                ('nccenr', models.CharField(help_text='Nom en clair (typographie riche)', max_length=200)),
                ('libelle', models.CharField(help_text='Nom en clair (typographie riche) avec article', max_length=200)),
                ('can', models.CharField(help_text='Code canton', max_length=5)),
                ('comparent', models.CharField(blank=True, help_text='Code de la commune parente', max_length=5)),
                ('dep', models.ForeignKey(help_text='Code département', on_delete=django.db.models.deletion.CASCADE, to='deces.departement')),
                ('reg', models.ForeignKey(help_text='Code région', on_delete=django.db.models.deletion.CASCADE, to='deces.region')),
            ],
            options={
                'verbose_name': 'Commune',
                'verbose_name_plural': 'Communes',
                'ordering': ['dep', 'ncc'],
            },
        ),
        migrations.RemoveField(
            model_name='deces',
            name='commune_naissance',
        ),
        migrations.RemoveField(
            model_name='deces',
            name='pays_naissance',
        ),
        migrations.AddIndex(
            model_name='departement',
            index=models.Index(fields=['ncc'], name='deces_depar_ncc_652a30_idx'),
        ),
        migrations.AddIndex(
            model_name='departement',
            index=models.Index(fields=['nccenr'], name='deces_depar_nccenr_b93fcb_idx'),
        ),
        migrations.AddIndex(
            model_name='departement',
            index=models.Index(fields=['libelle'], name='deces_depar_libelle_231216_idx'),
        ),
        migrations.AddIndex(
            model_name='commune',
            index=models.Index(fields=['ncc'], name='deces_commu_ncc_04802e_idx'),
        ),
        migrations.AddIndex(
            model_name='commune',
            index=models.Index(fields=['nccenr'], name='deces_commu_nccenr_89f691_idx'),
        ),
        migrations.AddIndex(
            model_name='commune',
            index=models.Index(fields=['libelle'], name='deces_commu_libelle_8a5329_idx'),
        ),
    ]
